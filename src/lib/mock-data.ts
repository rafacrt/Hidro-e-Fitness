
import type { Database } from './database.types';
import type { PaymentMethod } from '@/app/pagamentos/actions';

type Student = Database['public']['Tables']['students']['Row'];
type Payment = Database['public']['Tables']['payments']['Row'];

export const mockStudents: Student[] = [
  {
    id: '1',
    name: 'Ana Silva',
    cpf: '111.222.333-44',
    birth_date: '1995-03-15',
    email: 'ana.silva@email.com',
    phone: '11987654321',
    is_whatsapp: true,
    cep: '01001-000',
    street: 'Praça da Sé',
    number: '100',
    complement: 'Apto 101',
    neighborhood: 'Sé',
    city: 'São Paulo',
    state: 'SP',
    responsible_name: null,
    responsible_phone: null,
    medical_observations: 'Alergia a cloro.',
    status: 'ativo',
    created_at: new Date().toISOString(),
  },
  {
    id: '2',
    name: 'Bruno Costa',
    cpf: '222.333.444-55',
    birth_date: '1988-07-20',
    email: 'bruno.costa@email.com',
    phone: '21912345678',
    is_whatsapp: true,
    cep: '20040-004',
    street: 'Av. Rio Branco',
    number: '200',
    complement: null,
    neighborhood: 'Centro',
    city: 'Rio de Janeiro',
    state: 'RJ',
    responsible_name: null,
    responsible_phone: null,
    medical_observations: null,
    status: 'ativo',
    created_at: new Date().toISOString(),
  },
  {
    id: '3',
    name: 'Carla Dias',
    cpf: '333.444.555-66',
    birth_date: '2010-11-05',
    email: 'carla.dias@email.com',
    phone: '31988887777',
    is_whatsapp: false,
    cep: '30110-008',
    street: 'Av. do Contorno',
    number: '300',
    complement: null,
    neighborhood: 'Centro',
    city: 'Belo Horizonte',
    state: 'MG',
    responsible_name: 'Mariana Dias',
    responsible_phone: '31988887776',
    medical_observations: 'Asma. Levar bombinha.',
    status: 'inativo',
    created_at: new Date().toISOString(),
  },
  {
    id: '4',
    name: 'Daniel Martins',
    cpf: '444.555.666-77',
    birth_date: '1976-01-30',
    email: 'daniel.martins@email.com',
    phone: '51999998888',
    is_whatsapp: true,
    cep: '90010-110',
    street: 'Rua dos Andradas',
    number: '400',
    complement: null,
    neighborhood: 'Centro Histórico',
    city: 'Porto Alegre',
    state: 'RS',
    responsible_name: null,
    responsible_phone: null,
    medical_observations: 'Lesão no joelho esquerdo.',
    status: 'ativo',
    created_at: new Date().toISOString(),
  },
  {
    id: '5',
    name: 'Eduarda Ferreira',
    cpf: '555.666.777-88',
    birth_date: '2015-09-10',
    email: 'eduarda.ferreira@email.com',
    phone: '71977776666',
    is_whatsapp: true,
    cep: '40026-010',
    street: 'Ladeira do Pelourinho',
    number: '500',
    complement: null,
    neighborhood: 'Pelourinho',
    city: 'Salvador',
    state: 'BA',
    responsible_name: 'Ricardo Ferreira',
    responsible_phone: '71977776665',
    medical_observations: null,
    status: 'ativo',
    created_at: new Date().toISOString(),
  },
];


export const mockModalities = [
  { id: '1', name: 'Natação Adulto (Mock)' },
  { id: '2', name: 'Hidroginástica (Mock)' },
  { id: '3', name: 'Natação Infantil (Mock)' },
];

export const mockInstructors = [
  { id: '1', name: 'Prof. Ana Silva (Mock)' },
  { id: '2', name: 'Prof. Carlos Santos (Mock)' },
  { id: '3', name: 'Prof. Beatriz Lima (Mock)' },
];

export const mockPayments: Payment[] = [
  {
    id: '1',
    description: 'Manutenção - Troca de filtro da Piscina 1',
    amount: -450.00,
    due_date: '2024-07-15T00:00:00Z',
    status: 'pago',
    category: 'Manutenção',
    payment_method: 'PIX',
    type: 'despesa',
    student_id: null,
    paid_at: '2024-07-15T00:00:00Z',
    created_at: '2024-07-10T00:00:00Z',
  },
  {
    id: '2',
    description: 'Salários - Pagamento Prof. Ana Silva',
    amount: -3500.00,
    due_date: '2024-08-05T00:00:00Z',
    status: 'pendente',
    category: 'Salários',
    payment_method: 'Transferência',
    type: 'despesa',
    student_id: null,
    paid_at: null,
    created_at: '2024-07-05T00:00:00Z',
  },
  {
    id: '3',
    description: 'Contas (Água, Luz, etc.) - Conta de Luz',
    amount: -850.50,
    due_date: '2024-07-20T00:00:00Z',
    status: 'pago',
    category: 'Contas (Água, Luz, etc.)',
    payment_method: 'Boleto',
    type: 'despesa',
    student_id: null,
    paid_at: '2024-07-18T00:00:00Z',
    created_at: '2024-07-01T00:00:00Z',
  },
  {
    id: '4',
    description: 'Aluguel - Aluguel do espaço',
    amount: -5000.00,
    due_date: '2024-07-10T00:00:00Z',
    status: 'vencido',
    category: 'Aluguel',
    payment_method: 'Boleto',
    type: 'despesa',
    student_id: null,
    paid_at: null,
    created_at: '2024-06-10T00:00:00Z',
  },
  {
    id: '5',
    description: 'Marketing - Impulsionamento de post',
    amount: -150.00,
    due_date: '2024-07-25T00:00:00Z',
    status: 'pendente',
    category: 'Marketing',
    payment_method: 'Cartão de Crédito',
    type: 'despesa',
    student_id: null,
    paid_at: null,
    created_at: '2024-07-22T00:00:00Z',
  },
];

export const mockPaymentMethods: PaymentMethod[] = [
    {
        id: '1',
        name: 'PIX (Mock)',
        type: 'pix',
        enabled: true,
        fee_percentage: 0,
        created_at: new Date().toISOString(),
    },
    {
        id: '2',
        name: 'Cartão de Crédito (Mock)',
        type: 'card',
        enabled: true,
        fee_percentage: 3.5,
        created_at: new Date().toISOString(),
    },
    {
        id: '3',
        name: 'Dinheiro (Mock)',
        type: 'cash',
        enabled: true,
        fee_percentage: 0,
        created_at: new Date().toISOString(),
    },
     {
        id: '4',
        name: 'Transferência (Mock)',
        type: 'transfer',
        enabled: false,
        fee_percentage: 0,
        created_at: new Date().toISOString(),
    },
]
